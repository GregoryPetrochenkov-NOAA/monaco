name: Publish
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
      - uses: actions/checkout@v3

      - name: Set up python 3.11
      - uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Get full Python version
        id: full-python-version
        run: echo version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))") >> $GITHUB_OUTPUT

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-monaco-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry config installer.max-workers 1
          poetry install --extras "pandas" --no-root

      - name: Install library
        run: poetry install --extras "pandas"

      - name: Activate Environment
        run: source $VENV

      - name: Build package
        run: |
          poetry build

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist

  pypi-publish:
    needs: ['build']
    environment: 'main'

    name: upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/download-artifact@v3

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: artifact/
